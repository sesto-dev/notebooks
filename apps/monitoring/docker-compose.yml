services:
  prometheus-service:
    image: prom/prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    networks:
      - default

  grafana-service:
    image: grafana/grafana
    labels:
      # Enable Traefik for this service
      - "traefik.enable=true"

      - traefik.http.routers.grafana-http.rule=Host(`${GRAFANA_DOMAIN}`)
      - traefik.http.routers.grafana-http.entrypoints=http
      - traefik.http.routers.grafana-http.middlewares=https-redirect

      - traefik.http.routers.grafana-https.rule=Host(`${GRAFANA_DOMAIN}`)
      - traefik.http.routers.grafana-https.entrypoints=https
      - traefik.http.routers.grafana-https.tls=true
      - traefik.http.routers.grafana-https.tls.certresolver=le
      - traefik.http.routers.grafana-https.service=grafana-service

      - traefik.http.services.grafana-service.loadbalancer.server.port=3000
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus-service
    networks:
      - default
      - traefik-public

  loki-service:
    image: grafana/loki
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki:/etc/loki
      - loki_data:/loki
    networks:
      - default

  promtail:
    image: grafana/promtail
    volumes:
      - ./promtail:/etc/promtail
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
    networks:
      - default

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
    labels:
      # Enable Traefik for this service
      - "traefik.enable=true"

      - traefik.http.routers.node-exporter-http.rule=Host(`${NODE_EXPORTER_DOMAIN}`)
      - traefik.http.routers.node-exporter-http.entrypoints=http
      - traefik.http.routers.node-exporter-http.middlewares=https-redirect

      - traefik.http.routers.node-exporter-https.rule=Host(`${NODE_EXPORTER_DOMAIN}`)
      - traefik.http.routers.node-exporter-https.entrypoints=https
      - traefik.http.routers.node-exporter-https.tls=true
      - traefik.http.routers.node-exporter-https.tls.certresolver=le
      - traefik.http.routers.node-exporter-https.service=node-exporter-service

      - traefik.http.services.node-exporter-service.loadbalancer.server.port=9100
    networks:
      - default
      - traefik-public

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    labels:
      # Enable Traefik for this service
      - "traefik.enable=true"

      - traefik.http.routers.cadvisor-http.rule=Host(`${CADVISOR_DOMAIN}`)
      - traefik.http.routers.cadvisor-http.entrypoints=http
      - traefik.http.routers.cadvisor-http.middlewares=https-redirect

      - traefik.http.routers.cadvisor-https.rule=Host(`${CADVISOR_DOMAIN}`)
      - traefik.http.routers.cadvisor-https.entrypoints=https
      - traefik.http.routers.cadvisor-https.tls=true
      - traefik.http.routers.cadvisor-https.tls.certresolver=le
      - traefik.http.routers.cadvisor-https.service=cadvisor-service

      - traefik.http.services.cadvisor-service.loadbalancer.server.port=8080
    networks:
      - default
      - traefik-public

volumes:
  prometheus_data:
  grafana_data:
  loki_data:

networks:
  default:
    driver: bridge
  traefik-public:
    external: true
